<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ToysStore.Api</name>
    </assembly>
    <members>
        <member name="T:ToysStore.Api.ApiControllers.BaseController">
            <summary>
            
            </summary>
        </member>
        <member name="F:ToysStore.Api.ApiControllers.BaseController.Mediator">
            <summary>
            
            </summary>
        </member>
        <member name="M:ToysStore.Api.ApiControllers.BaseController.#ctor(MediatR.IMediator)">
            <summary>
            
            </summary>
            <param name="mediator"></param>
        </member>
        <member name="T:ToysStore.Api.ApiControllers.CompaniesController">
            <summary>
            
            </summary>
        </member>
        <member name="M:ToysStore.Api.ApiControllers.CompaniesController.#ctor(MediatR.IMediator)">
            <summary>
            
            </summary>
            <param name="mediator"></param>
        </member>
        <member name="M:ToysStore.Api.ApiControllers.CompaniesController.Get">
            <summary>
            Get all companies
            </summary>
            <returns></returns>
        </member>
        <member name="M:ToysStore.Api.ApiControllers.CompaniesController.GetId(System.Guid)">
            <summary>
            Get company by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ToysStore.Api.ApiControllers.CompaniesController.Add(ToysStore.Models.Requests.Companies.AddCompany.Request)">
            <summary>
            Add one company
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ToysStore.Api.ApiControllers.CompaniesController.Update(System.Guid,ToysStore.Models.Requests.Companies.UpdateCompany.Request)">
            <summary>
            Update one company
            </summary>
            <param name="id"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ToysStore.Api.ApiControllers.CompaniesController.Delete(System.Guid)">
            <summary>
            Delete one company
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:ToysStore.Api.ApiControllers.ProductsController">
            <summary>
            
            </summary>
        </member>
        <member name="M:ToysStore.Api.ApiControllers.ProductsController.#ctor(MediatR.IMediator)">
            <summary>
            
            </summary>
            <param name="mediator"></param>
        </member>
        <member name="M:ToysStore.Api.ApiControllers.ProductsController.Get">
            <summary>
            Get all products
            </summary>
            <returns></returns>
        </member>
        <member name="M:ToysStore.Api.ApiControllers.ProductsController.GetId(System.Guid)">
            <summary>
            Get product by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ToysStore.Api.ApiControllers.ProductsController.Add(ToysStore.Models.Requests.Products.AddProduct.Request)">
            <summary>
            Add one product
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ToysStore.Api.ApiControllers.ProductsController.Update(System.Guid,ToysStore.Models.Requests.Products.UpdateProduct.Request)">
            <summary>
            Update one product
            </summary>
            <param name="id"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ToysStore.Api.ApiControllers.ProductsController.Delete(System.Guid)">
            <summary>
            Delete one product
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:ToysStore.Api.Helpers.HandlerResponse">
            <summary>
            
            </summary>
        </member>
        <member name="M:ToysStore.Api.Helpers.HandlerResponse.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:ToysStore.Api.Helpers.HandlerResponse.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:ToysStore.Api.Helpers.HandlerResponseExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:ToysStore.Api.Helpers.HandlerResponseExtensions.UseHandlerResponse(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:ToysStore.Api.Helpers.SwaggerExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:ToysStore.Api.Helpers.SwaggerExtension.AddSwaggerNet(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="env"></param>
        </member>
        <member name="M:ToysStore.Api.Helpers.SwaggerExtension.UseSwaggerNet(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:ToysStore.Api.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="M:ToysStore.Api.Startup.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="environment"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:ToysStore.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
    </members>
</doc>
